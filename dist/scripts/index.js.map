{"version":3,"sources":["../assets/scripts/index.js"],"names":["Queue","_classCallCheck","this","items","_createClass","key","value","enqueue","push","element","dequeue","length","shift","peek","isEmpty","size","clear","Stack","add","remove","queue","console","log","stack"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;CAAC;EACC;EADW,IAKLA,QALK;IAAZ,SAAAA;MAAYC,gBAAAC,MAAAF,KAAA;MACXE,KAAAC,QAAA;AAOG;IARQC,aAAAJ,OAAA,EAAA;MAAAK,KAAA;MAAAC,OAAA,SAAAC,QAKLP;QACJ,OAAAE,KAAAC,MAAcK,KAAAC,OAAd;AAAc;AANL,OAAA;MAAAJ,KAAA;MAAAC,OAAA,SAAAI;QAiBL,IAAGR,KAAKC,MAAMQ,SAAS,GAAG;UAP9B,OAAAT,KAAAC,MAAAS,MAAA;AASK;AACJ;AApBQ,OAAA;MAAAP,KAAA;MAAAC,OAAA,SAAAO;QAYL,OAAAX,KAAAC,MAAOD,KAAKC,MAAMK,SAAX;AACV;AAbQ,OAAA;MAAAH,KAAA;MAAAC,OAAA,SAAAQ;QAAA,OAAAZ,KAAAC,MAAAQ,UAAA;AAAA;AAAA,OAAA;MAAAN,KAAA;MAAAC,OAAA,SAAAS;QAmBJ,OAAAb,KAAAC,MAAAQ;AACJ;AApBQ,OAAA;MAAAN,KAAA;MAAAC,OAAA,SAAAU;QAAAd,KAAAC,QAAA;AAAA;AAAA,OAAA;IAAA,OAAAH;AAAA,IAAA;EAAA,IA2BTiB,QA3BS;IA8CT,SAAAA;MAAchB,gBAAAC,MAAAe,KAAA;MA9CLf,KAAAC,QAAA;AAAA;IAAAC,aAAAa,OAAA,EAAA;MAAAZ,KAAA;MAAAC,OAAA,SAAAY,IA8BRT;QAsBG,OAAOP,KAAKC,MAAMK,KAAKC,OAAhB;AApBX;AAhCS,OAAA;MAAAJ,KAAA;MAAAC,OAAA,SAAAa;QAAA,IAAAjB,KAAAC,MAAAQ,SAAA,GAAA;UAkCL,OAAAT,KAAOC,MAAKA,IAAZ;AACH;AAyBA;AA5DQ,OAAA;MAAAE,KAAA;MAAAC,OAAA,SAAAO;QAAA,OAAAX,KAAAC,MAAAD,KAAAC,MAAAQ,SAAA;AAAA;AAAA,OAAA;MAAAN,KAAA;MAAAC,OAAA,SAAAQ;QAqEN,OAAOZ,KAAKC,MAAMQ,UAAU;AArEtB;AAAA,OAAA;MAAAN,KAAA;MAAAC,OAAA,SAAAS;QA0EL,OAAOb,KAAKC,MAAMQ;AA1Eb;AAAA,OAAA;MAAAN,KAAA;MAAAC,OAAA,SAAAU;QA+CLd,KAAAC,QAAKA;AACR;AAhDQ,OAAA;IAAA,OAAAc;AAAA,IAAA;EAmFX,IAAIG,QAAQ,IAAIpB,MAAJ;EACZoB,MAAMb,QAAQ,CAAd;EApFWa,MAAAb,QAAA,CAAA;EAAAa,MAAAb,QAAA,CAAA;EAAAa,MAAAb,QAAA,CAAA;EAoDLc,QAAAC,IAAAF,MAAAjB,KAAA;EAsCNiB,MAAMV,QAAN;EAnCEW,QAAAC,IAAAF,MAAAjB,KAAA;EAvDSkB,QAAAC,IAAAF,MAAAP,KAAA,CAAA;EAAAQ,QAAAC,IAAAF,MAAAN,QAAA,CAAA;EA0DDO,QAAAC,IAAAF,MAAAL,KAAA,CAAA;EAEPK,MAAAJ,MAAA;EAwCHK,QAAQC,IAAIF,MAAMjB,KAAlB;EAEA,IAAIoB,QAAQ,IAAIN,MAAJ;EAtGDM,MAAAL,IAAA,CAAA;EAAAK,MAAAL,IAAA,CAAA;EAAAK,MAAAL,IAAA,CAAA;EAgELK,MAAAL,IAAA,CAAA;EACHG,QAAAC,IAAAC,MAAApB,KAAA;EAEDoB,MAAAJ,OAAA;EA2CFE,QAAQC,IAAIC,MAAMpB,KAAlB;EA9GWkB,QAAAC,IAAAC,MAAAV,KAAA,CAAA;AAAZ,GAAA","file":"index.js","sourcesContent":["(function () {\n  'use strict';\n\n  // program to implement queue data structure\n\n  class Queue {\n    constructor() {\n        this.items = [];\n    }\n    \n    // add element to the queue\n    enqueue(element) {\n        return this.items.push(element);\n    }\n    \n    // remove element from the queue\n    dequeue() {\n        if(this.items.length > 0) {\n            return this.items.shift();\n        }\n    }\n    \n    // view the last element\n    peek() {\n        return this.items[this.items.length - 1];\n    }\n    \n    // check if the queue is empty\n    isEmpty(){\n       return this.items.length == 0;\n    }\n   \n    // the size of the queue\n    size(){\n        return this.items.length;\n    }\n\n    // empty the queue\n    clear(){\n        this.items = [];\n    }\n  }\n\n  // program to implement stack data structure\n\n  class Stack {\n    constructor() {\n        this.items = [];\n    }\n    \n    // add element to the stack\n    add(element) {\n        return this.items.push(element);\n    }\n    \n    // remove element from the stack\n    remove() {\n        if(this.items.length > 0) {\n            return this.items.pop();\n        }\n    }\n    \n    // view the last element\n    peek() {\n        return this.items[this.items.length - 1];\n    }\n    \n    // check if the stack is empty\n    isEmpty(){\n       return this.items.length == 0;\n    }\n   \n    // the size of the stack\n    size(){\n        return this.items.length;\n    }\n\n    // empty the stack\n    clear(){\n        this.items = [];\n    }\n  }\n\n  let queue = new Queue();\n  queue.enqueue(1);\n  queue.enqueue(2);\n  queue.enqueue(4);\n  queue.enqueue(8);\n  console.log(queue.items);\n\n  queue.dequeue();\n  console.log(queue.items);\n\n  console.log(queue.peek());\n\n  console.log(queue.isEmpty());\n\n  console.log(queue.size());\n\n  queue.clear();\n  console.log(queue.items);\n\n  let stack = new Stack();\n  stack.add(1);\n  stack.add(2);\n  stack.add(4);\n  stack.add(8);\n  console.log(stack.items);\n\n  stack.remove();\n  console.log(stack.items);\n\n  console.log(stack.peek());\n\n}());\n"],"sourceRoot":"assets/scripts/"}