{"version":3,"sources":["modules/Slider.js","modules/VideoOverlay.js","modules/ContentInAccordion.js","modules/TabsWithContent.js","modules/CardsWithIcon.js","main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["define('modules/Slider',[],function() {\n  const Slider = (function() {\n    const $testimionial = $('.testimonial');\n\n    const initSlider = function() {\n      if($testimionial.length === 0) return;\n     \n      $testimionial.each(function() {\n        const slides = $(this).find('.testimonial-card').length;\n        const wrapper = $(this).find('.testimonial__items'); \n\n        if (slides > 1) {\n          wrapper.slick({\n              infinite: true,\n              slidesToShow: 1,\n              slidesToScroll: 1,\n              dots: false,\n              arrows: true,\n            });  \n        }\n      });\n    }\n\n    const addEventhandler = function(handler) {\n      ['load', 'resize'].forEach(ev => window.addEventListener(ev, handler));\n    }\n\n    return {\n      initSlider: initSlider,\n      addHandler : addEventhandler, \n    };\n  })();\n\n  return Slider;\n});\n\n\n\n","define('modules/VideoOverlay',[],function () {\n  const VideoOverlay = (function () {\n    const $playButton = $('.video-play-button');\n    const $overlayElement = $('.video-overlay');\n    var videoId;\n    var ampersandPosition;\n\n    const extractVideoUrl = function (url) { \n      if (url === '') return;\n\n\n      if (url.indexOf('watch') > 0) {\n        videoId = url.split('v=')[1];\n        ampersandPosition = videoId.indexOf('&');\n\n        if (ampersandPosition != -1) {\n          videoId = videoId.substring(0, ampersandPosition);\n        }\n        return 'https://youtube.com/embed/' + videoId;\n      }\n\n      if (url.indexOf('youtu.be') > 0) {\n        videoId = url.split('e/')[1];\n        ampersandPosition = videoId.indexOf('&');\n\n        if (ampersandPosition != -1) {\n          videoId = videoId.substring(0, ampersandPosition);\n        }\n\n        return 'https://youtube.com/embed/' + videoId;\n      }\n    };\n\n    const overleyOpen = function (videoUrl) {\n      if ($overlayElement.length === 0) return;\n\n      $overlayElement.find('iframe').attr('src', videoUrl);\n      $overlayElement.addClass('active');\n    };\n\n    const closeOverlay = function (e) {\n      var clickedElement = e.target;\n\n      if (\n        $(clickedElement).hasClass('video-overlay') ||\n        $(clickedElement).hasClass('close') ||\n        $(clickedElement).hasClass('video-wrap') ||\n        $(clickedElement).hasClass('container')\n      ) {\n        $('.video-overlay').removeClass('active');\n        $('.video-overlay iframe').attr('src', '');\n      } else if (e.key == 'Escape') {\n        $('.video-overlay').removeClass('active');\n        $('.video-overlay iframe').attr('src', '');\n      }\n    };\n\n    const setVideoBoxDimesnions = function () {\n      if ($overlayElement.find('.video-wrap').length) {\n        var videoBoxWidth = $overlayElement.find('.container').width();\n        var videoBoxHeight = (videoBoxWidth / 16) * 9;\n\n        if (videoBoxHeight + 100 > $(window).height()) {\n          videoBoxHeight = $overlayElement.height();\n          videoBoxWidth = (videoBoxHeight / 9) * 16;\n        }\n\n        $overlayElement.find('.video-wrap').css({\n          width: videoBoxWidth + 'px',\n          height: videoBoxHeight + 'px',\n        });\n\n        var windowWidth = $(window).width();\n        if (windowWidth >= 1200) {\n          if ($(window).height() >= 776) {\n            $overlayElement.find('.video-wrap').css({ height: '620px' });\n          }\n        }\n      }\n    }\n\n    const init = function () {\n      $playButton.each(function () {\n        $(this).on('click', function (e) {\n          e.preventDefault();\n\n          const videoSrc = $(this).attr('href');\n          overleyOpen(extractVideoUrl(videoSrc));\n        });\n      });\n\n      $(window).on('load resize', setVideoBoxDimesnions);\n      $(document).on('click', closeOverlay);\n    };\n\n    return {\n      init: init,\n    };\n  })();\n\n  return VideoOverlay;\n});\n\n","define('modules/ContentInAccordion',[],function () {\n  const ContentInAccordion = (function () {\n    const $contentInAccordion = $('.content-in-accordion');\n    const $panelGroup = $contentInAccordion.find('.panel-group');\n\n    const firstPanelOpen = function () {\n      $('.content-in-accordion .panel:first .panel__body').show();\n      $('.content-in-accordion .panel:first .panel__heading').addClass('open');\n    }\n\n    const init = function () {\n      if ($contentInAccordion.length) {\n        firstPanelOpen();\n\n        $panelGroup.on('click', function(e) {\n          e.preventDefault();\n         \n          const clickedElement = e.target;\n\n          $(clickedElement).closest('.panel').find('.panel__heading').addClass('open');\n          $(clickedElement).closest('.panel').find('.panel__body').toggleClass('open').slideToggle();\n        });\n      }\n    }\n\n    return {\n      init: init,\n    }\n  })();\n\n  return ContentInAccordion;\n})\n;\n","define('modules/TabsWithContent',[],function () {\n  const TabsWithContent = (function () {\n    const $tabsWithConetnt = $('.tabs-with-content');\n    const $tabItem = $tabsWithConetnt.find('.tabs__nav li');\n    const $tabContent = $tabsWithConetnt.find('.tab-content');\n\n    const addTabId = function (elements, attribute = 'data-tab') {\n      elements.each(function (i, element) {\n        element.setAttribute(attribute, 'tab' + (i + 1));\n      });\n    };\n\n    const addActiveOnTabContent = function (tabId) {\n      $tabContent.removeClass('active');\n      $('.tab-content[tab-id=\"' + tabId + '\"]').addClass('active');\n    };\n\n    const firstTabShow = function () {\n      $tabsWithConetnt.find('.tabs__nav li:first').addClass('active');\n      $tabsWithConetnt.find('.tab-content:first').addClass('active');\n    };\n\n    const truncateLines = function () {\n      const textWrapper = document.querySelector('.tabs-with-content .content-wrap');\n      let options = {\n        ellipsis: ' \\u2026 ',\n        height: 200,\n        truncate: \"word\",\n      };\n\n      let dot = $(textWrapper).dotdotdot(options);\n    };\n\n    const init = function () {\n      if (!$tabsWithConetnt.length) return;\n\n      addTabId($tabItem);\n      addTabId($tabContent, 'tab-id');\n      firstTabShow();\n      truncateLines();\n\n      $tabItem.each(function (i, element) {\n        $(this).on('click', function (e) {\n          const tabId = $(this).attr('data-tab');\n\n          $tabItem.removeClass('active');\n          $(this).addClass('active');\n\n          addActiveOnTabContent(tabId);\n        });\n      });\n    };\n\n    return {\n      init: init,\n    };\n  })();\n\n  return TabsWithContent;\n});\n\n","\ndefine('modules/CardsWithIcon',[],function () {\n  const CardsWithIcon = (function () {\n    const $cardsBlade = $('.cards-with-icon');\n    const $cardTitle = $('.cards-with-icon .card .card__title');\n\n    const triggerMatchHeight = function (element) {\n      $cardsBlade.each(function () {\n        $(this).find(element).matchHeight();\n      });\n    }\n    \n    const init = function () {\n      if(!$cardsBlade.length) return;\n\n      $(window).on('load, resize', triggerMatchHeight($cardTitle));\n    }\n\n    return {\n      init: init,\n    }\n\n  })();\n\n  return CardsWithIcon;\n});\n","require(['modules/Slider', 'modules/VideoOverlay', 'modules/ContentInAccordion', 'modules/TabsWithContent', 'modules/CardsWithIcon'], function(Slider, VideoOverlay, ContentInAccordion, TabsWithContent, CardsWithIcon) {\n\n  Slider.addHandler(Slider.initSlider())\n  VideoOverlay.init();\n  ContentInAccordion.init();\n  TabsWithContent.init();\n  CardsWithIcon.init();\n});\n\n\n// import Queue from './modules/Queue';\n// import Stack from './modules/Stack';\n\n// let queue = new Queue();\n// queue.enqueue(1);\n// queue.enqueue(2);\n// queue.enqueue(4);\n// queue.enqueue(8);\n// console.log(queue.items);\n\n// queue.dequeue();\n// console.log(queue.items);\n\n// console.log(queue.peek());\n\n// console.log(queue.isEmpty());\n\n// console.log(queue.size());\n\n// queue.clear();\n// console.log(queue.items);\n\n// let stack = new Stack();\n// stack.add(1);\n// stack.add(2);\n// stack.add(4);\n// stack.add(8);\n// console.log(stack.items);\n\n// stack.remove();\n// console.log(stack.items);\n\n// console.log(stack.peek());\n\ndefine(\"main\", function(){});\n\n"],"sourceRoot":"assets/scripts/"}