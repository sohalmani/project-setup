{"version":3,"sources":["../assets/scripts/main.js"],"names":["Slider","$testimionial","$","initSlider","length","find","this","slides","wrapper","infinite","slidesToShow","slidesToScroll","arrows","addEventhandler","handler","forEach","ev","window","addEventListener","addHandler","$playButton","$overlayElement","videoId","VideoOverlay","url","ampersandPosition","extractVideoUrl","indexOf","substring","split","overleyOpen","videoUrl","attr","addClass","e","target","clickedElement","hasClass","removeClass","closeOverlay","setVideoBoxDimesnions","videoBoxWidth","width","videoBoxHeight","height","css","windowWidth","init","each","on","preventDefault","videoSrc","$contentInAccordion","$panelGroup","firstPanelOpen","ContentInAccordion","show","closest","toggleClass","slideToggle","$tabsWithConetnt","$tabItem","$tabContent","TabsWithContent","elements","attribute","arguments","undefined","i","element","tabId","firstTabShow","addActiveOnTabContent","truncateLines","textWrapper","document","querySelector","truncate","ellipsis","addTabId","CardsWithIcon","$cardsBlade","triggerMatchHeight","matchHeight","$cardTitle"],"mappings":"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","file":"main.js","sourcesContent":["(function () {\n  'use strict';\n\n  const Slider = (function () {\n    const $testimionial = $(\".testimonial\");\n    const initSlider = function () {\n      if ($testimionial.length === 0) return;\n      $testimionial.each(function () {\n        const slides = $(this).find(\".testimonial-card\").length;\n        const wrapper = $(this).find(\".testimonial__items\");\n        if (slides > 1) {\n          wrapper.slick({\n            infinite: true,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            dots: false,\n            arrows: true\n          });\n        }\n      });\n    };\n    const addEventhandler = function (handler) {\n      [\"load\", \"resize\"].forEach(ev => window.addEventListener(ev, handler));\n    };\n    return {\n      initSlider: initSlider,\n      addHandler: addEventhandler\n    };\n  })();\n\n  const VideoOverlay = (function () {\n    const $playButton = $(\".video-play-button\");\n    const $overlayElement = $(\".video-overlay\");\n    var videoId;\n    var ampersandPosition;\n    const extractVideoUrl = function (url) {\n      if (url === \"\") return;\n      if (url.indexOf(\"watch\") > 0) {\n        videoId = url.split(\"v=\")[1];\n        ampersandPosition = videoId.indexOf(\"&\");\n        if (ampersandPosition != -1) {\n          videoId = videoId.substring(0, ampersandPosition);\n        }\n        return \"https://youtube.com/embed/\" + videoId;\n      }\n      if (url.indexOf(\"youtu.be\") > 0) {\n        videoId = url.split(\"e/\")[1];\n        ampersandPosition = videoId.indexOf(\"&\");\n        if (ampersandPosition != -1) {\n          videoId = videoId.substring(0, ampersandPosition);\n        }\n        return \"https://youtube.com/embed/\" + videoId;\n      }\n    };\n    const overleyOpen = function (videoUrl) {\n      if ($overlayElement.length === 0) return;\n      $overlayElement.find(\"iframe\").attr(\"src\", videoUrl);\n      $overlayElement.addClass(\"active\");\n    };\n    const closeOverlay = function (e) {\n      var clickedElement = e.target;\n      if ($(clickedElement).hasClass(\"video-overlay\") || $(clickedElement).hasClass(\"close\") || $(clickedElement).hasClass(\"video-wrap\") || $(clickedElement).hasClass(\"container\")) {\n        $(\".video-overlay\").removeClass(\"active\");\n        $(\".video-overlay iframe\").attr(\"src\", \"\");\n      } else if (e.key == \"Escape\") {\n        $(\".video-overlay\").removeClass(\"active\");\n        $(\".video-overlay iframe\").attr(\"src\", \"\");\n      }\n    };\n    const setVideoBoxDimesnions = function () {\n      if ($overlayElement.find(\".video-wrap\").length) {\n        var videoBoxWidth = $overlayElement.find(\".container\").width();\n        var videoBoxHeight = videoBoxWidth / 16 * 9;\n        if (videoBoxHeight + 100 > $(window).height()) {\n          videoBoxHeight = $overlayElement.height();\n          videoBoxWidth = videoBoxHeight / 9 * 16;\n        }\n        $overlayElement.find(\".video-wrap\").css({\n          width: videoBoxWidth + \"px\",\n          height: videoBoxHeight + \"px\"\n        });\n        var windowWidth = $(window).width();\n        if (windowWidth >= 1200) {\n          if ($(window).height() >= 776) {\n            $overlayElement.find(\".video-wrap\").css({\n              height: \"620px\"\n            });\n          }\n        }\n      }\n    };\n    const init = function () {\n      $playButton.each(function () {\n        $(this).on(\"click\", function (e) {\n          e.preventDefault();\n          const videoSrc = $(this).attr(\"href\");\n          overleyOpen(extractVideoUrl(videoSrc));\n        });\n      });\n      $(window).on(\"load resize\", setVideoBoxDimesnions);\n      $(document).on(\"click\", closeOverlay);\n    };\n    return {\n      init: init\n    };\n  })();\n\n  const ContentInAccordion = (function () {\n    const $contentInAccordion = $(\".content-in-accordion\");\n    const $panelGroup = $contentInAccordion.find(\".panel-group\");\n    const firstPanelOpen = function () {\n      $(\".content-in-accordion .panel:first .panel__body\").show();\n      $(\".content-in-accordion .panel:first .panel__heading\").addClass(\"open\");\n    };\n    const init = function () {\n      if ($contentInAccordion.length) {\n        firstPanelOpen();\n        $panelGroup.on(\"click\", function (e) {\n          e.preventDefault();\n          const clickedElement = e.target;\n          $(clickedElement).closest(\".panel\").find(\".panel__heading\").addClass(\"open\");\n          $(clickedElement).closest(\".panel\").find(\".panel__body\").toggleClass(\"open\").slideToggle();\n        });\n      }\n    };\n    return {\n      init: init\n    };\n  })();\n\n  const TabsWithContent = (function () {\n    const $tabsWithConetnt = $(\".tabs-with-content\");\n    const $tabItem = $tabsWithConetnt.find(\".tabs__nav li\");\n    const $tabContent = $tabsWithConetnt.find(\".tab-content\");\n    const addTabId = function (elements, attribute = \"data-tab\") {\n      elements.each(function (i, element) {\n        element.setAttribute(attribute, \"tab\" + (i + 1));\n      });\n    };\n    const addActiveOnTabContent = function (tabId) {\n      $tabContent.removeClass(\"active\");\n      $(\".tab-content[tab-id=\\\"\" + tabId + \"\\\"]\").addClass(\"active\");\n    };\n    const firstTabShow = function () {\n      $tabsWithConetnt.find(\".tabs__nav li:first\").addClass(\"active\");\n      $tabsWithConetnt.find(\".tab-content:first\").addClass(\"active\");\n    };\n    const truncateLines = function () {\n      const textWrapper = document.querySelector(\".tabs-with-content .content-wrap\");\n      let options = {\n        ellipsis: \" … \",\n        height: 200,\n        truncate: \"word\"\n      };\n      let dot = $(textWrapper).dotdotdot(options);\n    };\n    const init = function () {\n      if (!$tabsWithConetnt.length) return;\n      addTabId($tabItem);\n      addTabId($tabContent, \"tab-id\");\n      firstTabShow();\n      truncateLines();\n      $tabItem.each(function (i, element) {\n        $(this).on(\"click\", function (e) {\n          const tabId = $(this).attr(\"data-tab\");\n          $tabItem.removeClass(\"active\");\n          $(this).addClass(\"active\");\n          addActiveOnTabContent(tabId);\n        });\n      });\n    };\n    return {\n      init: init\n    };\n  })();\n\n  const CardsWithIcon = (function () {\n    const $cardsBlade = $(\".cards-with-icon\");\n    const $cardTitle = $(\".cards-with-icon .card .card__title\");\n    const triggerMatchHeight = function (element) {\n      $cardsBlade.each(function () {\n        $(this).find(element).matchHeight();\n      });\n    };\n    const init = function () {\n      if (!$cardsBlade.length) return;\n      $(window).on(\"load, resize\", triggerMatchHeight($cardTitle));\n    };\n    return {\n      init: init\n    };\n  })();\n\n  Slider.addHandler(Slider.initSlider());\n  VideoOverlay.init();\n  ContentInAccordion.init();\n  TabsWithContent.init();\n  CardsWithIcon.init();\n\n}());\n"],"sourceRoot":"assets/scripts/"}